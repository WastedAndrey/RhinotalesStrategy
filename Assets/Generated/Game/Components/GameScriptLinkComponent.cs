//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ScriptLinkComponent scriptLink { get { return (ScriptLinkComponent)GetComponent(GameComponentsLookup.ScriptLink); } }
    public bool hasScriptLink { get { return HasComponent(GameComponentsLookup.ScriptLink); } }

    public void AddScriptLink(EntityLink newScript) {
        var index = GameComponentsLookup.ScriptLink;
        var component = (ScriptLinkComponent)CreateComponent(index, typeof(ScriptLinkComponent));
        component.Script = newScript;
        AddComponent(index, component);
    }

    public void ReplaceScriptLink(EntityLink newScript) {
        var index = GameComponentsLookup.ScriptLink;
        var component = (ScriptLinkComponent)CreateComponent(index, typeof(ScriptLinkComponent));
        component.Script = newScript;
        ReplaceComponent(index, component);
    }

    public void RemoveScriptLink() {
        RemoveComponent(GameComponentsLookup.ScriptLink);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScriptLink;

    public static Entitas.IMatcher<GameEntity> ScriptLink {
        get {
            if (_matcherScriptLink == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScriptLink);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScriptLink = matcher;
            }

            return _matcherScriptLink;
        }
    }
}
