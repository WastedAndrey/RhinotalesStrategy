//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UnitCombatTypeComponent unitCombatType { get { return (UnitCombatTypeComponent)GetComponent(GameComponentsLookup.UnitCombatType); } }
    public bool hasUnitCombatType { get { return HasComponent(GameComponentsLookup.UnitCombatType); } }

    public void AddUnitCombatType(UnitCombatType newUnitCombatType) {
        var index = GameComponentsLookup.UnitCombatType;
        var component = (UnitCombatTypeComponent)CreateComponent(index, typeof(UnitCombatTypeComponent));
        component.UnitCombatType = newUnitCombatType;
        AddComponent(index, component);
    }

    public void ReplaceUnitCombatType(UnitCombatType newUnitCombatType) {
        var index = GameComponentsLookup.UnitCombatType;
        var component = (UnitCombatTypeComponent)CreateComponent(index, typeof(UnitCombatTypeComponent));
        component.UnitCombatType = newUnitCombatType;
        ReplaceComponent(index, component);
    }

    public void RemoveUnitCombatType() {
        RemoveComponent(GameComponentsLookup.UnitCombatType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUnitCombatType;

    public static Entitas.IMatcher<GameEntity> UnitCombatType {
        get {
            if (_matcherUnitCombatType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UnitCombatType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUnitCombatType = matcher;
            }

            return _matcherUnitCombatType;
        }
    }
}
